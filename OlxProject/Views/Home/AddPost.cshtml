@model OlxProject.Models.AddViewModel
@{
    ViewBag.Title = "AddPost";
}


<div class="form form-body form-body-post">
    <div class="wrapper">



        @using (Html.BeginForm("AddPost", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h2>Post Your Ad</h2>
                <hr />




                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                <div class="row">

                    
                        
                    <div style="margin-left:50px;">
                        @{
                            Html.RenderAction("Detail", new { Name = @ViewBag.Category });
                        }
                    </div>

                    <hr />
                    <div class="col-md-8">

                        <input type="hidden"  id="Category" name="Category" value="@ViewBag.Category"/>
                        <div class="form-group">
                            <label class="control-label" style="margin-left:15px;margin-right:5px;"> Featured:</label>
                            <input type="radio" name="Feature" value="1" checked> Yes
                            <input type="radio" name="Feature" value="0"> No

                            @Html.ValidationMessageFor(model => model.Condition, "", new { @class = "text-danger" })
                        </div>
                            <div class="form-group">

                                <label class="control-label" style="margin-left:15px;margin-right:5px;"> Condtion:</label>
                                <input type="radio" name="Condition" value="New" checked> New
                                <input type="radio" name="Condition" value="Used"> Used

                                @Html.ValidationMessageFor(model => model.Condition, "", new { @class = "text-danger" })

                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">


                                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })


                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">

                                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("State", new List<SelectListItem>
                           {

                               new SelectListItem() { Text = "Islamabad Capital", Value = "Islamabad" },
                               new SelectListItem() { Text = "Punjab", Value = "Punjab" },
                               new SelectListItem() { Text = "Sindh", Value = "Sindh" },
                               new SelectListItem() { Text = "KPK", Value = "KPK" },
                               new SelectListItem() { Text = "Balochistan", Value = "Balochistan" }
                             }, "Choose State", new
                             {
                                 @class = "form-control col-md-2",
                                 @onchange = "GetState();"

                             })
                                    <br />
                                    <br />
                                    <div>
                                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })

                                    </div>

                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">



                                    @Html.DropDownList("City", new List<SelectListItem>
                           {







                           }, "Choose City", new { @id = "DropDownListStates", @class = "form-control col-md-2" })




                                    <br />
                                    <br />
                                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Post Now" class="btn btn-default" />
                                </div>
                            </div>


                        </div>





                    <div class="col-md-4">
                        <div class="row">

                            <h4>Upload Images</h4>
                        </div>

                        <div class="row">

                            <div class="col-sm-8 imgUp">
                                <div class="imagePreview"></div>
                                <label class="btn btn-primary">
                                    Upload<input type="file" class="uploadFile img" name="Files" value="Upload Photo" style="width: 0px;height: 0px;overflow: hidden;">
                                </label>
                            </div><!-- col-2 -->
                        </div>

                        <div class="row">

                            <div class="col-sm-8 imgUp">
                                <div class="imagePreview"></div>
                                <label class="btn btn-primary">
                                    Upload<input type="file" class="uploadFile img" name="Files" value="Upload Photo" style="width: 0px;height: 0px;overflow: hidden;">
                                </label>
                            </div><!-- col-2 -->
                        </div>

                        <div class="row">

                            <div class="col-sm-8 imgUp">
                                <div class="imagePreview"></div>
                                <label class="btn btn-primary">
                                    Upload<input type="file" class="uploadFile img" name="Files" value="Upload Photo" style="width: 0px;height: 0px;overflow: hidden;">
                                </label>
                            </div><!-- col-2 -->
                        </div>



                    </div>

                </div>
               
                @Html.ValidationMessageFor(model => model.Files, "", new { @class = "text-danger" })
            
                    </div>        

             
                      
                        
            

                    }




                </div>


</div>


